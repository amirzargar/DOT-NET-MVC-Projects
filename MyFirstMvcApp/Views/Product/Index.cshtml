@using X.PagedList.Mvc.Core
@using X.PagedList
@model IPagedList<MyFirstMvcApp.Models.Product>


<!-- This is the Index view for the Product controller -->

@{
    ViewData["Title"] = "Product Page";
}



<p>
    <a class="btn btn-primary"href="/Product/Create">Add New Product</a>
</p>


@* Displaying a message from the controller *@
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}


@* Displaying a list of products in a table format *@
<h2>Product List (From DataBase)</h2>

@* Check if the model is null or empty before displaying the table *@
@if (Model.Count == 0)
{
    <p>No products available.</p>
}
else
{
  
        <form asp-controller="Product" asp-action="Index" method="get">
            <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" placeholder="Search by name" />
            <button type="submit">Search</button>
        </form>

      
      
    <p>Search Term: @ViewBag.SearchTerm</p>
   
    <p>
        <!-- Sorting Links -->
        Sort by:
        <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSort">Name</a> |
        <a asp-action="Index" asp-route-sortOrder="@ViewBag.PriceSort">Price</a>
    </p>


    
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Price (₹)</th>
                <th>Quantity</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model)
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" width="80" height="80" />
                        }
                        else
                        {
                            <span>No image</span>
                        }
                    </td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.Quantity</td>
                   <td>
                        <a asp-action="Edit" asp-route-id="@product.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@product.Id">Delete</a>
                   </td>
                        
                </tr>

            }
        </tbody>
    </table>

    <div>
        @Html.PagedListPager(Model, page => Url.Action("Index", new {
        page,
        searchTerm = ViewBag.SearchTerm,
        sortOrder = ViewBag.SortOrder
        }))

</div>

}
